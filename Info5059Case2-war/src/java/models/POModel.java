package models;

import java.io.Serializable;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import javax.annotation.Resource;
import java.sql.PreparedStatement;
import javax.enterprise.context.RequestScoped;
import javax.inject.Named;
import javax.sql.DataSource;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;


/**
 *
 * @author GCouto A model back bean for a generator Entity
 */
@Named(value = "poModel")
@RequestScoped
public class POModel implements Serializable {
    public POModel() {}
    
    // resource already defined in GlassFish
    @Resource(lookup="jdbc/Info5059db")
    DataSource ds;
    
    //Function: AddPO
    //Takes: int - Vendor Number && ArrayList<ProductOrderDTO> items which contains the 
    //products selected by the user
    //Outputs: String poNum containing the PO number auto generated by the stmt.
    public String AddPO(int vendorno, double total, ArrayList<GeneratorItemDTO> items) throws SQLException {
        
        String msg = "";
        int poNum = -1;
        String sql;
        PreparedStatement stmt;
        Connection con = null;
        
        try {
            
            DateFormat format = new SimpleDateFormat("yyyy/MM/dd");
            Date date = new Date();
            java.sql.Date sqlDate = new java.sql.Date(date.getTime());
            
            con = ds.getConnection();
            con.setAutoCommit(false); 
            sql = "INSERT INTO PurchaseOrders (Vendorno, Amount, PODate) VALUES (?,?,?)";
            stmt = con.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);
            stmt.setInt(1, vendorno);
            stmt.setDouble(2, total);
            stmt.setDate(3, sqlDate);
            
            stmt.execute();
            try (ResultSet rs = stmt.getGeneratedKeys()) {
                rs.next();
                poNum = rs.getInt(1);
            }
            
            
            stmt.close();
            
            for (GeneratorItemDTO item : items) {
                if (item.getQty() > 0) {
                    sql = "INSERT INTO PurchaseOrderLineItems (PONumber, Prodcd, Qty, Price) VALUES"
                            + " (?,?,?,?)";
                    stmt = con.prepareStatement(sql, PreparedStatement.RETURN_GENERATED_KEYS);
                    stmt.setInt(1, poNum);
                    stmt.setString(2, item.getProdcd());
                    stmt.setInt(3, item.getQty());
                    stmt.setDouble(4, item.getExt());
                    stmt.execute();

                    //ResultSet rs = stmt.getGeneratedKeys();
                    //rs.next();
                }
            }
            
            
            con.commit();
            
            msg = "PO " + poNum + " Added!";
            
        } catch (SQLException se) {
            System.out.println("SQL issue " + se.getMessage());
            msg = "PO add FAILED! = " + se.getMessage();
            try {
                con.rollback();
                msg = "PO add FAILED! Transation was Rolledback";
            } catch (SQLException sqx) {
                System.out.println("Rollback failed - " + sqx.getMessage());
            }
        } catch (Exception e) {
            System.out.println("Other issue " + e.getMessage());
        } finally {
            try {
                if (con != null) {
                    con.close();
                }
            } catch (SQLException se) {
                System.out.println("SQL issue on close " + se.getMessage());
            }
        }
        
        return msg;
    }
    
}
